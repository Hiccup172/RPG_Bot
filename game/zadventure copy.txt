"""
this is where all the adventure related things go,
come here to find it!!!
"""
import random
import json
import discord
import economy
from typing import Union

#class stats
#add the dictionary of the dictionarys in the hacker function and havethe loot pool, character can a thought on what you want to do for the future of this project.

def write_to_json(data_dict: dict) -> None:
    with open("adventure.json", "w") as file:
        json.dump(data_dict, file, indent = 4)

def read_from_json() -> dict:
    with open("adventure.json", "r") as file:
        data = json.load(file)
    return data

def read_from_lootpool() -> dict:
    with open("loot_pool.json", "r") as file:
        data = json.load(file)
    return data   

def read_job_template() -> dict:
    with open("job_template.json", "r") as file:
        data = json.load(file)
    return data

def character_exist(user_id:int) -> bool:
    data = read_from_json()
    if str(user_id) not in data:
        return False
    return True


def create_character(user_id:int, job: str) -> tuple:
    data = read_from_json()

    if str(user_id) in data:
        print("you have created a character")
        return ("you already created a character",False)
    else:
        characters = read_job_template()
        if job in characters:
            data[user_id] = characters[job]
            data[user_id]["inventory"] = {}
            data[user_id]["equiped"] = {}
            write_to_json(data)
            print("create")
            return (f"you created your character as {job}", True)
        else:
            print("noOoOoOoOoOoOoOo")
            return ("no Errorrrrrrrr", False)
    

def delete_character(user_id:int) -> tuple:
    data = read_from_json()
    user_id = str(user_id)
    del data[user_id]
    write_to_json(data)

def check_stats(user_id:int) -> dict:
    data = read_from_json()
    user_id = str(user_id)
    return data[user_id]

def ur_stats(user_id:int):
    stat = check_stats(user_id=user_id)

    out = discord.Embed(title="your stats", description="you will see your stats here:", color=discord.Color.blue())
    out.add_field(name="level:",value=stat["base"]["level"],inline=True)
    out.add_field(name="xp:",value=stat["base"]["xp"],inline=True)
    out.add_field(name="hp:",value=stat["base"]["hp"],inline=True)
    out.add_field(name="strength:",value=stat["base"]["strength"],inline=True)
    out.add_field(name="intelligence:",value=stat["base"]["intelligence"],inline=True)
    out.add_field(name="inventory:",value=stat["inventory"],inline=True)
    return out
    
def change_base_stats(user_id:int, amount:int, stat:str):
    user_id = str(user_id)
    data = read_from_json()
    data[user_id]["base"][stat] += int(amount+0.5)
    write_to_json(data)
    return

def leveling_up(user_id:int):
    user_id = str(user_id)
    data = read_from_json()
    stat_list = ["hp", "strength", "intelligence"]
    for stat in stat_list:
        change_base_stats(user_id=user_id, amount=data[user_id]["base"][stat]*data[user_id]["base"]["stat_for_levels"], stat = stat)
    change_base_stats(user_id=user_id, amount=1, stat = "level")

def add_item(user_id:int, item:str, location:str):
    data = read_from_json()
    loot = read_from_lootpool()
    data[str(user_id)]["inventory"][item] = loot[location][item]
    write_to_json(data)

def move_to_equiped(user_id: int, item:str):
    data = read_from_json()
    if item not in data[str(user_id)]["inventory"]:
        return "you dont have this"
    data[str(user_id)]["equiped"][item] = data[str(user_id)]["inventory"][item]
    del data[str(user_id)]["inventory"][item]
    write_to_json(data)

    



# homework, equip unequip, stats are right, make list to dict, do equiping properly

# def use_item(user_id:int, item:str):
#     user_id = str(user_id)
#     data = read_from_json()

# def adventure(user_id:int):
#     user_id = str(user_id)
#     data = read_from_json()
#     damage = 


#leveling_up("709160342810525777")



    



